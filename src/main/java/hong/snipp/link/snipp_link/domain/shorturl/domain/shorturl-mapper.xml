<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hong.snipp.link.snipp_link.domain.shorturl.domain.SnipShortUrlMapper">

    <select id="getShortURLByOriginURL" parameterType="String" resultType="SnipShortUrlView">
        /* snipShortUrl.getShortURLByOriginURL */
        SELECT UID
              ,ORIGIN_URL
              ,SHORT_URL
              ,CREATED_AT
              ,EXPIRES_AT
              ,CASE WHEN (EXPIRES_AT >= NOW()) THEN 'N'
                    WHEN (NOW() > EXPIRES_AT) THEN 'Y'
                END AS IS_EXPIRED
              ,IS_PUBLIC
          FROM SNP_SHORTEN_URL
         WHERE ORIGIN_URL = #{originUrl}
    </select>


    <select id="getShortURLByShortURL" parameterType="String" resultType="SnipShortUrlView">
        /* snipShortUrl.getShortURLByShortURL */
        SELECT UID
              ,ORIGIN_URL
              ,SHORT_URL
              ,CREATED_AT
              ,EXPIRES_AT
              ,CASE WHEN (EXPIRES_AT >= NOW()) THEN 'N'
                    WHEN (NOW() > EXPIRES_AT) THEN 'Y'
                END AS IS_EXPIRED
              ,IS_PUBLIC
          FROM SNP_SHORTEN_URL
         WHERE SHORT_URL = #{shortURL}
    </select>

    <insert id="insert" parameterType="SnipShortUrl" useGeneratedKeys="true" keyProperty="uid">
        /* snipShortUrl.insert */
        INSERT INTO SNP_SHORTEN_URL (
             ORIGIN_URL
            ,SHORT_URL
            ,CREATED_AT
            ,EXPIRES_AT
            ,IS_PUBLIC
        ) VALUES (
             #{originUrl}
            ,''
            ,NOW()
            ,(NOW() + INTERVAL '1' WEEK)
            ,#{isPublic}
        )
    </insert>

    <select id="countByShortURL" parameterType="String" resultType="int">
        /* snipShortUrl.countByShortURL */
        SELECT COUNT(*)
          FROM SNP_SHORTEN_URL
         WHERE SHORT_URL = #{shrotUrl}
    </select>

    <update id="update" parameterType="SnipShortUrl">
        /* snipShortUrl.update */
        UPDATE SNP_SHORTEN_URL
           SET SHORT_URL = #{shortUrl}
         WHERE UID = #{uid}
    </update>

    <select id="page" resultType="SnipShortUrlList" parameterType="SnipShortUrlParam">
        /* snipShortUrl.page */
        SELECT UID
              ,ORIGIN_URL
              ,SHORT_URL
              ,CREATED_AT
              ,EXPIRES_AT
              ,CASE WHEN (EXPIRES_AT >= NOW()) THEN 'N'
                    WHEN (NOW() > EXPIRES_AT) THEN 'Y'
                 END AS IS_EXPIRED
              ,IS_PUBLIC
          FROM SNP_SHORTEN_URL SSU
         WHERE 1 = 1
        <if test="(startDate != null and startDate != '') and (endDate != null and endDate != '')">
           AND SSU.CREATED_AT BETWEEN #{startDate} AND #{endDate}
        </if>
        <if test="isPublic != null and isPublic != ''">
           AND SSU.IS_PUBLIC = #{isPublic}
        </if>
         ORDER BY SSU.CREATED_AT DESC
        <if test="startNumber != null and endNumber != null">
         LIMIT #{endNumber} OFFSET #{startNumber}
        </if>
    </select>

    <select id="list" resultType="SnipShortUrlList" parameterType="SnipShortUrlParam">
        /* snipShortUrl.list */
        SELECT UID
              ,ORIGIN_URL
              ,SHORT_URL
              ,CREATED_AT
              ,EXPIRES_AT
              ,CASE WHEN (EXPIRES_AT >= NOW()) THEN 'N'
                    WHEN (NOW() > EXPIRES_AT) THEN 'Y'
                 END AS IS_EXPIRED
              ,IS_PUBLIC
          FROM SNP_SHORTEN_URL SSU
         WHERE 1 = 1
        <if test="(startDate != null and startDate != '') and (endDate != null and endDate != '')">
           AND SSU.CREATED_AT BETWEEN #{startDate} AND #{endDate}
        </if>
        <if test="isPublic != null and isPublic != ''">
           AND SSU.IS_PUBLIC = #{isPublic}
        </if>
         ORDER BY SSU.CREATED_AT DESC
    </select>

    <select id="count" resultType="int" parameterType="SnipShortUrlParam">
        /* snipShortUrl.count */
        SELECT COUNT(*)
          FROM SNP_SHORTEN_URL SSU
         WHERE 1 = 1
        <if test="(startDate != null and startDate != '') and (endDate != null and endDate != '')">
           AND SSU.CREATED_AT BETWEEN #{startDate} AND #{endDate}
        </if>
        <if test="isPublic != null and isPublic != ''">
           AND SSU.IS_PUBLIC = #{isPublic}
        </if>
    </select>

</mapper>