<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hong.snipp.link.snipp_link.domain.comment.domain.SnipCommentMapper">

    <insert id="insert" parameterType="SnipComment">
        /* snipComment.insert */
        INSERT INTO SNP_COMMENT (
             BOARD_UID
            ,CONTENT
            ,DELETE_AT
            ,REG_UID
            ,REG_DT
            ,UPDT_UID
            ,UPDT_DT
        ) VALUES (
             #{boardUid}
            ,#{content}
            ,'N'
            ,#{regUid}
            ,NOW()
            ,#{updtUid}
            ,NOW()
        )
    </insert>

    <update id="update" parameterType="SnipComment">
        /* snipComment.update */
        UPDATE SNP_COMMENT
           SET CONTENT = #{content}
              ,UPDT_UID = #{updtUid}
              ,UPDT_DT = NOW()
         WHERE UID = #{uid}
    </update>

    <select id="getAllCommentList" parameterType="Long" resultType="SnipCommentList">
        /* snipComment.getAllCommentList */
        SELECT SC.UID AS COMMENT_UID
              ,SC.BOARD_UID
              ,SC.CONTENT
              ,SC.REG_UID
              ,SC.REG_DT
              ,SU_REG.USER_ID AS REG_ID
              ,SC.UPDT_UID
              ,SC.UPDT_DT
              ,SU_UPDT.USER_ID AS UPDT_ID
          FROM SNP_COMMENT SC
          LEFT JOIN SNP_USER SU_REG ON SU_REG.UID = SC.REG_UID
          LEFT JOIN SNP_USER SU_UPDT ON SU_UPDT.UID = SC.UPDT_UID
         WHERE SC.BOARD_UID = #{boardUid}
           AND SC.DELETE_AT = 'N'
    </select>

    <delete id="delete" parameterType="SnipComment">
        /* snipComment.delete */
        UPDATE SNP_COMMENT
           SET DELETE_AT = 'Y'
              ,UPDT_UID = #{updtUid}
              ,UPDT_DT = NOW()
         WHERE UID = #{uid}
        </delete>
</mapper>