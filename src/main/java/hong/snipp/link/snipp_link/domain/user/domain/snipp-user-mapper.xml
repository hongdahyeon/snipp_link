<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hong.snipp.link.snipp_link.domain.user.domain.SnippUserMapper">

    <select id="getUserByUserId" resultType="SnippUserView" parameterType="String">
        /* snippUser.getUserByUserId */
        SELECT SU.UID
              ,SU.USER_ID
              ,SU.PASSWORD
              ,SU.USER_EMAIL
              ,SU.USER_NM
              ,SU.USER_ROLE
              ,SU.LAST_CONN_DT
              ,SU.LAST_PWD_CHNG_DT
              ,SU.PWD_FAIL_CNT
              ,SU.IS_LOCKED
              ,SU.IS_ENABLE
              ,SSU.UID AS SOCIAL_UID
              ,SSU.SOCIAL_TP AS SOCIAL_TP
              ,SSU.USER_ID AS SOCIAL_USER_ID
          FROM SNP_USER SU
          LEFT JOIN SNP_SOCIAL_USER SSU ON SU.SOCIAL_UID = SSU.UID
         WHERE SU.USER_ID = #{userId}
    </select>

    <select id="countByUserEmail" parameterType="String" resultType="int">
        /* snippUser.countByUserEmail */
        SELECT COUNT(*)
          FROM SNP_USER
         WHERE USER_EMAIL = #{userEmail}
    </select>

    <select id="countByUserId" parameterType="String" resultType="int">
        /* snippUser.countByUserId */
        SELECT COUNT(*)
          FROM SNP_USER
         WHERE USER_ID = #{userId}
    </select>

    <insert id="insert" parameterType="SnippUser">
        /* snippUser.insert */
        INSERT INTO SNP_USER (
             USER_ID
            ,PASSWORD
            ,USER_EMAIL
            ,USER_NM
            ,SOCIAL_UID
            ,USER_ROLE
            ,LAST_CONN_DT
            ,LAST_PWD_CHNG_DT
            ,PWD_FAIL_CNT
            ,IS_LOCKED
            ,IS_ENABLE
        ) VALUES (
             #{userId}
            ,#{password}
            ,#{userEmail}
            ,#{userNm}
            ,#{socialUid}
            ,#{userRole}
            ,NOW()
            ,(NOW() + INTERVAL '90' DAY)
            ,0
            ,'N'
            ,'Y'
        )
    </insert>

    <update id="updateLastLoginDtAndPwdFailCntByUserId" parameterType="String">
        /* snippUser.updateLastLoginDtAndPwdFailCntByUserId */
        UPDATE SNP_USER
           SET PWD_FAIL_CNT = 0
              ,LAST_CONN_DT = NOW()
         WHERE USER_ID = #{userId}
    </update>

    <update id="updateLastLoginDtAndPwdFailCntByUserEmail" parameterType="String">
        /* snippUser.updateLastLoginDtAndPwdFailCntByUserEmail */
        UPDATE SNP_USER
           SET PWD_FAIL_CNT = 0
              ,LAST_CONN_DT = NOW()
         WHERE USER_EMAIL = #{userEmail}
    </update>

    <update id="updatePwdFailCnt" parameterType="map">
        /* snippUser.updatePwdFailCnt */
        UPDATE SNP_USER
           SET PWD_FAIL_CNT = #{pwdFailCnt}
            <if test="pwdFailCnt != null and pwdFailCnt == 5">
               ,IS_LOCKED = 'Y'
            </if>
          WHERE USER_ID = #{userId}
    </update>

    <update id="updateUserPassword" parameterType="SnippUser">
        /* snippUser.updateUserPassword */
        UPDATE SNP_USER
           SET PASSWORD = #{password}
              ,LAST_PWD_CHNG_DT = (NOW() + INTERVAL '90' DAY)
         WHERE USER_ID = #{userId}
    </update>

    <update id="updateUserChangePasswordDt" parameterType="SnippUser">
        /* snippUser.updateUserChangePasswordDt */
        UPDATE SNP_USER
           SET LAST_PWD_CHNG_DT = (NOW() + INTERVAL '90' DAY)
         WHERE USER_ID = #{userId}
    </update>

    <select id="page" parameterType="SnippUserSearch" resultType="SnippUserList">
        /* snippUser.page */
        SELECT SU.UID
              ,SU.USER_ID
              ,SU.PASSWORD
              ,SU.USER_EMAIL
              ,SU.USER_NM
              ,SU.USER_ROLE
              ,SU.LAST_CONN_DT
              ,SU.LAST_PWD_CHNG_DT
              ,SU.PWD_FAIL_CNT
              ,SU.IS_LOCKED
              ,SU.IS_ENABLE
              ,SSU.UID AS SOCIAL_UID
              ,SSU.SOCIAL_TP AS SOCIAL_TP
              ,SSU.USER_ID AS SOCIAL_USER_ID
          FROM SNP_USER SU
          LEFT JOIN SNP_SOCIAL_USER SSU ON SU.SOCIAL_UID = SSU.UID
        WHERE 1 = 1
        <if test="userNm != null and userNm != ''">
          AND SU.USER_NM LIKE CONCAT('%',#{userNm},'%')
        </if>
        <if test="userEmail != null and userEmail != ''">
          AND SU.USER_EMAIL LIKE CONCAT('%',#{userEmail},'%')
        </if>
        ORDER BY SU.UID DESC
        <if test="startNumber != null and endNumber != null">
        LIMIT #{endNumber} OFFSET #{startNumber}
        </if>
    </select>

    <select id="count" parameterType="SnippUserSearch" resultType="int">
        /* snippUser.count */
        SELECT COUNT(*)
          FROM SNP_USER SU
          LEFT JOIN SNP_SOCIAL_USER SSU ON SU.SOCIAL_UID = SSU.UID
         WHERE 1 = 1
        <if test="userNm != null and userNm != ''">
           AND SU.USER_NM LIKE CONCAT('%',#{userNm},'%')
        </if>
        <if test="userEmail != null and userEmail != ''">
           AND SU.USER_EMAIL LIKE CONCAT('%',#{userEmail},'%')
        </if>
    </select>

    <select id="list" parameterType="SnippUserSearch" resultType="SnippUserList">
        /* snippUser.list */
        SELECT SU.UID
              ,SU.USER_ID
              ,SU.PASSWORD
              ,SU.USER_EMAIL
              ,SU.USER_NM
              ,SU.USER_ROLE
              ,SU.LAST_CONN_DT
              ,SU.LAST_PWD_CHNG_DT
              ,SU.PWD_FAIL_CNT
              ,SU.IS_LOCKED
              ,SU.IS_ENABLE
              ,SSU.UID AS SOCIAL_UID
              ,SSU.SOCIAL_TP AS SOCIAL_TP
              ,SSU.USER_ID AS SOCIAL_USER_ID
          FROM SNP_USER SU
          LEFT JOIN SNP_SOCIAL_USER SSU ON SU.SOCIAL_UID = SSU.UID
         WHERE 1 = 1
        <if test="userNm != null and userNm != ''">
           AND SU.USER_NM LIKE CONCAT('%',#{userNm},'%')
        </if>
        <if test="userEmail != null and userEmail != ''">
           AND SU.USER_EMAIL LIKE CONCAT('%',#{userEmail},'%')
        </if>
         ORDER BY SU.UID DESC
    </select>
</mapper>